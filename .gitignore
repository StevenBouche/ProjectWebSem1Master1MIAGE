.DS_STORE

/dist/
/bazel-out
/integration/bazel/bazel-*
*.log
node_modules

# Include when developing application packages.
pubspec.lock
.c9
.idea/
.devcontainer/*
!.devcontainer/README.md
!.devcontainer/recommended-devcontainer.json
!.devcontainer/recommended-Dockerfile
.settings/
.vscode/launch.json
.vscode/settings.json
.vscode/tasks.json
*.swo
modules/.settings
modules/.vscode
.vimrc
.nvimrc

# Don't check in secret files
*secret.js

# Ignore npm/yarn debug log
npm-debug.log
yarn-error.log

# build-analytics
.build-analytics

# rollup-test output
/modules/rollup-test/dist/

# User specific bazel settings
.bazelrc.user

# User specific ng-dev settings
.ng-dev.user*

.notes.md
baseline.json

# Ignore .history for the xyz.local-history VSCode extension
.history


# The 5 approved on boarding samples that need wwwroot/lib/ can add a local .gitignore that allows wwwroot/lib/.
# with 2.1 templates and excluding .min & .map -> 27 files and < 1 KB
# 3.0 templates should be even less
# wwwroot/lib/
# When wwwroot/lib/ is commented out, excluse .min and .map files
*.min.css
*.min.js
*.map

_build/
_site/
Properties/

# See #577
# Use git add -f to force override .sln when required. Not needed in most cases.
# git add -f myProj.sln
*.sln

Project_Readme.html

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates
.vscode/
!.vscode/extensions.json
!.vscode/settings.json
# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
bld/
[Bb]in/
[Oo]bj/

# Visual Studo 2015 cache/options directory
.vs/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opensdf
*.sdf
*.cachefile

# Visual Studio profiler
*.psess
*.vsp
*.vspx

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding addin-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings 
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config

# Windows Azure Build Output
csx/
*.build.csdef

# Windows Store app package directory
AppPackages/

# Others
*.[Cc]ache
ClientBin/
[Ss]tyle[Cc]op.*
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
node_modules/
bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/

# Node.js Tools for Visual Studio
.ntvs_analysis.dat

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

project.lock.json
__pycache__/

#Mac OSX 
.DS_Store

# Windows thumbnail cache files
Thumbs.db
WebAPI/Microservice/ForumDB/db/diagnostic.data/metrics.2020-11-04T17-49-33Z-00000

WebAPI/Microservice/ForumDB/db/diagnostic.data/metrics.interim

WebAPI/Microservice/ForumDB/db/journal/WiredTigerLog.0000000003

WebAPI/Microservice/ForumDB/db/WiredTiger.turtle

WebAPI/Microservice/ForumDB/db/WiredTiger.wt

WebAPI/Microservice/RestaurantDB/db/diagnostic.data/metrics.2020-11-04T17-49-43Z-00000

WebAPI/Microservice/RestaurantDB/db/diagnostic.data/metrics.interim

WebAPI/Microservice/RestaurantDB/db/journal/WiredTigerLog.0000000004

WebAPI/Microservice/RestaurantDB/db/WiredTiger.turtle

WebAPI/Microservice/RestaurantDB/db/WiredTiger.wt

WebAPI/Microservice/UserDB/db/collection-4--8969221221889549208.wt

WebAPI/Microservice/UserDB/db/collection-7--8969221221889549208.wt

WebAPI/Microservice/UserDB/db/diagnostic.data/metrics.2020-11-04T17-49-58Z-00000

WebAPI/Microservice/UserDB/db/diagnostic.data/metrics.interim

WebAPI/Microservice/UserDB/db/index-5--8969221221889549208.wt

WebAPI/Microservice/UserDB/db/index-6--8969221221889549208.wt

WebAPI/Microservice/UserDB/db/journal/WiredTigerLog.0000000005

WebAPI/Microservice/UserDB/db/sizeStorer.wt

WebAPI/Microservice/UserDB/db/WiredTiger.turtle

WebAPI/Microservice/UserDB/db/WiredTiger.wt

WebAPI/Microservice/ForumDB/db/_mdb_catalog.wt

WebAPI/Microservice/ForumDB/db/collection-0-4413658807804549650.wt

WebAPI/Microservice/ForumDB/db/collection-2--8544104618634703513.wt

WebAPI/Microservice/ForumDB/db/collection-2-4413658807804549650.wt

WebAPI/Microservice/ForumDB/db/collection-4-4413658807804549650.wt

WebAPI/Microservice/ForumDB/db/collection-6--8544104618634703513.wt

WebAPI/Microservice/ForumDB/db/diagnostic.data/metrics.2020-11-07T13-52-06Z-00000

WebAPI/Microservice/ForumDB/db/diagnostic.data/metrics.2020-11-07T18-41-08Z-00000

WebAPI/Microservice/ForumDB/db/diagnostic.data/metrics.2020-11-07T18-48-44Z-00000

WebAPI/Microservice/ForumDB/db/index-1-4413658807804549650.wt

WebAPI/Microservice/ForumDB/db/index-3--8544104618634703513.wt

WebAPI/Microservice/ForumDB/db/index-3-4413658807804549650.wt

WebAPI/Microservice/ForumDB/db/index-5-4413658807804549650.wt

WebAPI/Microservice/ForumDB/db/index-6-4413658807804549650.wt

WebAPI/Microservice/ForumDB/db/index-7--8544104618634703513.wt

WebAPI/Microservice/ForumDB/db/journal/WiredTigerLog.0000000002

WebAPI/Microservice/ForumDB/db/sizeStorer.wt

WebAPI/Microservice/RestaurantDB/db/_mdb_catalog.wt

WebAPI/Microservice/RestaurantDB/db/collection-0--2608852733528418649.wt

WebAPI/Microservice/RestaurantDB/db/collection-2--2608852733528418649.wt

WebAPI/Microservice/RestaurantDB/db/collection-4--2608852733528418649.wt

WebAPI/Microservice/RestaurantDB/db/diagnostic.data/metrics.2020-11-07T13-39-34Z-00000

WebAPI/Microservice/RestaurantDB/db/diagnostic.data/metrics.2020-11-07T13-52-08Z-00000

WebAPI/Microservice/RestaurantDB/db/diagnostic.data/metrics.2020-11-07T18-41-15Z-00000

WebAPI/Microservice/RestaurantDB/db/diagnostic.data/metrics.2020-11-07T18-48-41Z-00000

WebAPI/Microservice/RestaurantDB/db/index-1--2608852733528418649.wt

WebAPI/Microservice/RestaurantDB/db/index-3--2608852733528418649.wt

WebAPI/Microservice/RestaurantDB/db/index-5--2608852733528418649.wt

WebAPI/Microservice/RestaurantDB/db/index-6--2608852733528418649.wt

WebAPI/Microservice/RestaurantDB/db/index-6-24540252630087719.wt

WebAPI/Microservice/RestaurantDB/db/journal/WiredTigerLog.0000000002

WebAPI/Microservice/RestaurantDB/db/sizeStorer.wt

WebAPI/Microservice/UserDB/db/_mdb_catalog.wt

WebAPI/Microservice/UserDB/db/collection-0--6414773814215961447.wt

WebAPI/Microservice/UserDB/db/collection-2--6414773814215961447.wt

WebAPI/Microservice/UserDB/db/collection-4--1145116315172724011.wt

WebAPI/Microservice/UserDB/db/collection-4--6414773814215961447.wt

WebAPI/Microservice/UserDB/db/collection-7--6414773814215961447.wt

WebAPI/Microservice/UserDB/db/diagnostic.data/metrics.2020-11-07T13-52-06Z-00000

WebAPI/Microservice/UserDB/db/diagnostic.data/metrics.2020-11-07T18-44-35Z-00000

WebAPI/Microservice/UserDB/db/diagnostic.data/metrics.2020-11-07T18-48-42Z-00000

WebAPI/Microservice/UserDB/db/index-1--6414773814215961447.wt

WebAPI/Microservice/UserDB/db/index-3--6414773814215961447.wt

WebAPI/Microservice/UserDB/db/index-5--1145116315172724011.wt

WebAPI/Microservice/UserDB/db/index-5--6414773814215961447.wt

WebAPI/Microservice/UserDB/db/index-6--1145116315172724011.wt

WebAPI/Microservice/UserDB/db/index-6--6414773814215961447.wt

WebAPI/Microservice/UserDB/db/index-8--6414773814215961447.wt

WebAPI/Microservice/UserDB/db/journal/WiredTigerLog.0000000002

*.wt

WebAPI/Microservice/ForumDB/db/diagnostic.data/metrics.2020-11-07T13-40-29Z-00000

WebAPI/Microservice/UserDB/db/diagnostic.data/metrics.2020-11-07T13-39-36Z-00000

WebAPI/Microservice/ForumDB/db/diagnostic.data/

WebAPI/Microservice/RestaurantDB/db/diagnostic.data/

WebAPI/Microservice/UserDB/db/diagnostic.data/

WebAPI/Microservice/ForumDB/

WebAPI/Microservice/UserDB/

WebAPI/Microservice/RestaurantDB/
